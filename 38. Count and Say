
 

Example 1:

Input: n = 4

Output: "1211"

Explanation:

countAndSay(1) = "1"
countAndSay(2) = RLE of "1" = "11"
countAndSay(3) = RLE of "11" = "21"
countAndSay(4) = RLE of "21" = "1211"
Example 2:

Input: n = 1

Output: "1"

Explanation:

This is the base case.

 

Constraints:

1 <= n <= 30
 

Follow up: Could you solve it iteratively?











.///////////////////////////////.


solution:



public class Solution {
    public string CountAndSay(int n) {
    string result = "1";
        
        for (int i = 2; i <= n; i++) {
            result = GetNext(result);
        }
        
        return result;
    }
    
    private string GetNext(string current) {
        int count = 1;
        char digit = current[0];
        System.Text.StringBuilder nextTerm = new System.Text.StringBuilder();
        
        for (int j = 1; j < current.Length; j++) {
            if (current[j] == digit) {
                // If the current character matches the previous, increase the count
                count++;
            } else {
                // Append count and digit to the result string
                nextTerm.Append(count);
                nextTerm.Append(digit);
                // Reset count and digit
                count = 1;
                digit = current[j];
            }
        }
        
        // Append the last counted sequence
        nextTerm.Append(count);
        nextTerm.Append(digit);
        
        return nextTerm.ToString();
    }
}
